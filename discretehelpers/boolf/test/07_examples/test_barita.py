from discretehelpers.set_part import SetPart

from discretehelpers.boolf.examples import barita


def test():
    assert barita.fullspots == {0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 16, 17, 24, 32, 33, 40, 48, 49, 56}
    assert barita.splits == [
        ({1, 33, 3, 17, 5, 49, 7}, {0, 32, 2, 4, 6, 8, 40, 10, 12, 14, 16, 48, 24, 56}),  # a 0
        ({2, 3, 6, 7, 10, 14}, {0, 1, 32, 33, 4, 5, 8, 40, 12, 16, 17, 48, 49, 24, 56}),  # b 1
        ({4, 5, 6, 7, 12, 14}, {0, 1, 2, 3, 32, 33, 8, 40, 10, 16, 17, 48, 49, 24, 56}),  # c 2
        ({10, 56, 8, 24, 40, 12, 14}, {0, 1, 2, 3, 4, 5, 6, 7, 32, 33, 16, 17, 48, 49}),  # d 3
        ({16, 17, 48, 49, 24, 56}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 32, 10, 33, 12, 40, 14}),  # e 4
        ({32, 33, 48, 49, 40, 56}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 16, 17, 24})   # f 5
    ]
    assert barita.splits_overlap_counts == {(0, 1): 4, (0, 2): 4, (0, 3): 3, (0, 4): 4, (0, 5): 4, (1, 2): 4, (1, 3): 4, (1, 4): 3, (1, 5): 3, (2, 3): 4, (2, 4): 3, (2, 5): 3, (3, 4): 4, (3, 5): 4, (4, 5): 4}
    assert barita.split_pairs_with_3_overlaps == [(0, 3), (1, 4), (1, 5), (2, 4), (2, 5)]
    assert barita.bundles == [[0, 1, 2, 3, 4, 5]]
    assert barita.bundle_overlap_counts == {
        (0, 1, 2, 3, 4, 5): {
            3: [(0, 3), (1, 4), (1, 5), (2, 4), (2, 5)],
            4: [(0, 1), (0, 2), (0, 4), (0, 5), (1, 2), (1, 3), (2, 3), (3, 4), (3, 5), (4, 5)]
        }
    }
    assert barita.bundle_grid_partitions == {
        (0, 1, 2, 3, 4, 5): SetPart([[0, 3], [1, 2, 4, 5]])  # [a, d], [b, c, e, f]
    }
    assert barita.gapless_boolf == barita
